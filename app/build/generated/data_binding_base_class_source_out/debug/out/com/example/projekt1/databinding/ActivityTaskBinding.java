// Generated by view binder compiler. Do not edit!
package com.example.projekt1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projekt1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTaskBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView TaskName;

  @NonNull
  public final TextView comment;

  @NonNull
  public final TextView creator;

  @NonNull
  public final TextView deadline;

  @NonNull
  public final TextView dlakogo;

  @NonNull
  public final ImageView guzikBack;

  @NonNull
  public final Button guzikRaport;

  @NonNull
  public final TextView points;

  @NonNull
  public final LinearLayout roomviewlayout;

  @NonNull
  public final TextView wykonane;

  private ActivityTaskBinding(@NonNull RelativeLayout rootView, @NonNull TextView TaskName,
      @NonNull TextView comment, @NonNull TextView creator, @NonNull TextView deadline,
      @NonNull TextView dlakogo, @NonNull ImageView guzikBack, @NonNull Button guzikRaport,
      @NonNull TextView points, @NonNull LinearLayout roomviewlayout, @NonNull TextView wykonane) {
    this.rootView = rootView;
    this.TaskName = TaskName;
    this.comment = comment;
    this.creator = creator;
    this.deadline = deadline;
    this.dlakogo = dlakogo;
    this.guzikBack = guzikBack;
    this.guzikRaport = guzikRaport;
    this.points = points;
    this.roomviewlayout = roomviewlayout;
    this.wykonane = wykonane;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TaskName;
      TextView TaskName = ViewBindings.findChildViewById(rootView, id);
      if (TaskName == null) {
        break missingId;
      }

      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.creator;
      TextView creator = ViewBindings.findChildViewById(rootView, id);
      if (creator == null) {
        break missingId;
      }

      id = R.id.deadline;
      TextView deadline = ViewBindings.findChildViewById(rootView, id);
      if (deadline == null) {
        break missingId;
      }

      id = R.id.dlakogo;
      TextView dlakogo = ViewBindings.findChildViewById(rootView, id);
      if (dlakogo == null) {
        break missingId;
      }

      id = R.id.guzikBack;
      ImageView guzikBack = ViewBindings.findChildViewById(rootView, id);
      if (guzikBack == null) {
        break missingId;
      }

      id = R.id.guzikRaport;
      Button guzikRaport = ViewBindings.findChildViewById(rootView, id);
      if (guzikRaport == null) {
        break missingId;
      }

      id = R.id.points;
      TextView points = ViewBindings.findChildViewById(rootView, id);
      if (points == null) {
        break missingId;
      }

      id = R.id.roomviewlayout;
      LinearLayout roomviewlayout = ViewBindings.findChildViewById(rootView, id);
      if (roomviewlayout == null) {
        break missingId;
      }

      id = R.id.wykonane;
      TextView wykonane = ViewBindings.findChildViewById(rootView, id);
      if (wykonane == null) {
        break missingId;
      }

      return new ActivityTaskBinding((RelativeLayout) rootView, TaskName, comment, creator,
          deadline, dlakogo, guzikBack, guzikRaport, points, roomviewlayout, wykonane);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
