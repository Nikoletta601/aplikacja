// Generated by view binder compiler. Do not edit!
package com.example.projekt1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projekt1.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateTaskBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button guzikBack;

  @NonNull
  public final Button guzikCreateTask;

  @NonNull
  public final TextView taskCreateTitle;

  @NonNull
  public final EditText taskName;

  @NonNull
  public final TextInputLayout taskNameTil;

  @NonNull
  public final Button taskdate;

  @NonNull
  public final TextInputLayout taskpunk;

  @NonNull
  public final EditText taskpunkty;

  @NonNull
  public final Button tasktime;

  @NonNull
  public final TextInputLayout tasktr;

  @NonNull
  public final EditText tasktresc;

  @NonNull
  public final TextView who;

  private ActivityCreateTaskBinding(@NonNull RelativeLayout rootView, @NonNull Button guzikBack,
      @NonNull Button guzikCreateTask, @NonNull TextView taskCreateTitle,
      @NonNull EditText taskName, @NonNull TextInputLayout taskNameTil, @NonNull Button taskdate,
      @NonNull TextInputLayout taskpunk, @NonNull EditText taskpunkty, @NonNull Button tasktime,
      @NonNull TextInputLayout tasktr, @NonNull EditText tasktresc, @NonNull TextView who) {
    this.rootView = rootView;
    this.guzikBack = guzikBack;
    this.guzikCreateTask = guzikCreateTask;
    this.taskCreateTitle = taskCreateTitle;
    this.taskName = taskName;
    this.taskNameTil = taskNameTil;
    this.taskdate = taskdate;
    this.taskpunk = taskpunk;
    this.taskpunkty = taskpunkty;
    this.tasktime = tasktime;
    this.tasktr = tasktr;
    this.tasktresc = tasktresc;
    this.who = who;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guzikBack;
      Button guzikBack = ViewBindings.findChildViewById(rootView, id);
      if (guzikBack == null) {
        break missingId;
      }

      id = R.id.guzikCreateTask;
      Button guzikCreateTask = ViewBindings.findChildViewById(rootView, id);
      if (guzikCreateTask == null) {
        break missingId;
      }

      id = R.id.taskCreateTitle;
      TextView taskCreateTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskCreateTitle == null) {
        break missingId;
      }

      id = R.id.taskName;
      EditText taskName = ViewBindings.findChildViewById(rootView, id);
      if (taskName == null) {
        break missingId;
      }

      id = R.id.taskNameTil;
      TextInputLayout taskNameTil = ViewBindings.findChildViewById(rootView, id);
      if (taskNameTil == null) {
        break missingId;
      }

      id = R.id.taskdate;
      Button taskdate = ViewBindings.findChildViewById(rootView, id);
      if (taskdate == null) {
        break missingId;
      }

      id = R.id.taskpunk;
      TextInputLayout taskpunk = ViewBindings.findChildViewById(rootView, id);
      if (taskpunk == null) {
        break missingId;
      }

      id = R.id.taskpunkty;
      EditText taskpunkty = ViewBindings.findChildViewById(rootView, id);
      if (taskpunkty == null) {
        break missingId;
      }

      id = R.id.tasktime;
      Button tasktime = ViewBindings.findChildViewById(rootView, id);
      if (tasktime == null) {
        break missingId;
      }

      id = R.id.tasktr;
      TextInputLayout tasktr = ViewBindings.findChildViewById(rootView, id);
      if (tasktr == null) {
        break missingId;
      }

      id = R.id.tasktresc;
      EditText tasktresc = ViewBindings.findChildViewById(rootView, id);
      if (tasktresc == null) {
        break missingId;
      }

      id = R.id.who;
      TextView who = ViewBindings.findChildViewById(rootView, id);
      if (who == null) {
        break missingId;
      }

      return new ActivityCreateTaskBinding((RelativeLayout) rootView, guzikBack, guzikCreateTask,
          taskCreateTitle, taskName, taskNameTil, taskdate, taskpunk, taskpunkty, tasktime, tasktr,
          tasktresc, who);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
