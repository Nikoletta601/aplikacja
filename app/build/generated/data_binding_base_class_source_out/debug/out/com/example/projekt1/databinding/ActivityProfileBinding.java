// Generated by view binder compiler. Do not edit!
package com.example.projekt1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projekt1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView emailTV;

  @NonNull
  public final Button guzikEditProfile;

  @NonNull
  public final Button guzikShowMyRooms;

  @NonNull
  public final Button guzikShowMyTasks;

  @NonNull
  public final Button guzikWyloguj;

  private ActivityProfileBinding(@NonNull LinearLayout rootView, @NonNull TextView emailTV,
      @NonNull Button guzikEditProfile, @NonNull Button guzikShowMyRooms,
      @NonNull Button guzikShowMyTasks, @NonNull Button guzikWyloguj) {
    this.rootView = rootView;
    this.emailTV = emailTV;
    this.guzikEditProfile = guzikEditProfile;
    this.guzikShowMyRooms = guzikShowMyRooms;
    this.guzikShowMyTasks = guzikShowMyTasks;
    this.guzikWyloguj = guzikWyloguj;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailTV;
      TextView emailTV = ViewBindings.findChildViewById(rootView, id);
      if (emailTV == null) {
        break missingId;
      }

      id = R.id.guzikEditProfile;
      Button guzikEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (guzikEditProfile == null) {
        break missingId;
      }

      id = R.id.guzikShowMyRooms;
      Button guzikShowMyRooms = ViewBindings.findChildViewById(rootView, id);
      if (guzikShowMyRooms == null) {
        break missingId;
      }

      id = R.id.guzikShowMyTasks;
      Button guzikShowMyTasks = ViewBindings.findChildViewById(rootView, id);
      if (guzikShowMyTasks == null) {
        break missingId;
      }

      id = R.id.guzikWyloguj;
      Button guzikWyloguj = ViewBindings.findChildViewById(rootView, id);
      if (guzikWyloguj == null) {
        break missingId;
      }

      return new ActivityProfileBinding((LinearLayout) rootView, emailTV, guzikEditProfile,
          guzikShowMyRooms, guzikShowMyTasks, guzikWyloguj);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
