// Generated by view binder compiler. Do not edit!
package com.example.projekt1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projekt1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowMyRoomsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Tytul;

  @NonNull
  public final ImageView guzikBack;

  @NonNull
  public final ImageView guzikJoinRoom;

  @NonNull
  public final LinearLayout roomviewlayout;

  private ActivityShowMyRoomsBinding(@NonNull RelativeLayout rootView, @NonNull TextView Tytul,
      @NonNull ImageView guzikBack, @NonNull ImageView guzikJoinRoom,
      @NonNull LinearLayout roomviewlayout) {
    this.rootView = rootView;
    this.Tytul = Tytul;
    this.guzikBack = guzikBack;
    this.guzikJoinRoom = guzikJoinRoom;
    this.roomviewlayout = roomviewlayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowMyRoomsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowMyRoomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_my_rooms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowMyRoomsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Tytul;
      TextView Tytul = ViewBindings.findChildViewById(rootView, id);
      if (Tytul == null) {
        break missingId;
      }

      id = R.id.guzikBack;
      ImageView guzikBack = ViewBindings.findChildViewById(rootView, id);
      if (guzikBack == null) {
        break missingId;
      }

      id = R.id.guzikJoinRoom;
      ImageView guzikJoinRoom = ViewBindings.findChildViewById(rootView, id);
      if (guzikJoinRoom == null) {
        break missingId;
      }

      id = R.id.roomviewlayout;
      LinearLayout roomviewlayout = ViewBindings.findChildViewById(rootView, id);
      if (roomviewlayout == null) {
        break missingId;
      }

      return new ActivityShowMyRoomsBinding((RelativeLayout) rootView, Tytul, guzikBack,
          guzikJoinRoom, roomviewlayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
